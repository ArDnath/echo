
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.0
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.0",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  emailVerified: 'emailVerified',
  image: 'image',
  isArchived: 'isArchived',
  archivedAt: 'archivedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  totalPaid: 'totalPaid',
  totalSpent: 'totalSpent',
  admin: 'admin',
  referralGithubUserId: 'referralGithubUserId',
  latestTosVersion: 'latestTosVersion',
  latestPrivacyVersion: 'latestPrivacyVersion',
  latestFreeCreditsVersion: 'latestFreeCreditsVersion'
};

exports.Prisma.AccountScalarFieldEnum = {
  userId: 'userId',
  type: 'type',
  provider: 'provider',
  providerAccountId: 'providerAccountId',
  refresh_token: 'refresh_token',
  access_token: 'access_token',
  expires_at: 'expires_at',
  token_type: 'token_type',
  scope: 'scope',
  id_token: 'id_token',
  session_state: 'session_state',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SessionScalarFieldEnum = {
  sessionToken: 'sessionToken',
  userId: 'userId',
  expires: 'expires',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VerificationTokenScalarFieldEnum = {
  identifier: 'identifier',
  token: 'token',
  expires: 'expires'
};

exports.Prisma.EchoAppScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  profilePictureUrl: 'profilePictureUrl',
  bannerImageUrl: 'bannerImageUrl',
  homepageUrl: 'homepageUrl',
  isPublic: 'isPublic',
  isArchived: 'isArchived',
  archivedAt: 'archivedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  authorizedCallbackUrls: 'authorizedCallbackUrls',
  currentReferralRewardId: 'currentReferralRewardId'
};

exports.Prisma.AppMembershipScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  echoAppId: 'echoAppId',
  role: 'role',
  status: 'status',
  isArchived: 'isArchived',
  archivedAt: 'archivedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  totalSpent: 'totalSpent',
  amountSpent: 'amountSpent',
  referrerId: 'referrerId'
};

exports.Prisma.ApiKeyScalarFieldEnum = {
  id: 'id',
  keyHash: 'keyHash',
  name: 'name',
  isArchived: 'isArchived',
  archivedAt: 'archivedAt',
  lastUsed: 'lastUsed',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId',
  echoAppId: 'echoAppId',
  scope: 'scope'
};

exports.Prisma.RefreshTokenScalarFieldEnum = {
  id: 'id',
  token: 'token',
  isArchived: 'isArchived',
  archivedAt: 'archivedAt',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId',
  echoAppId: 'echoAppId',
  scope: 'scope',
  sessionId: 'sessionId'
};

exports.Prisma.AppSessionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  echoAppId: 'echoAppId',
  deviceName: 'deviceName',
  userAgent: 'userAgent',
  ipAddress: 'ipAddress',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  lastSeenAt: 'lastSeenAt',
  revokedAt: 'revokedAt',
  isArchived: 'isArchived'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  paymentId: 'paymentId',
  amount: 'amount',
  currency: 'currency',
  status: 'status',
  source: 'source',
  description: 'description',
  isArchived: 'isArchived',
  archivedAt: 'archivedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId',
  spendPoolId: 'spendPoolId'
};

exports.Prisma.PayoutScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  status: 'status',
  type: 'type',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  description: 'description',
  transactionId: 'transactionId',
  senderAddress: 'senderAddress',
  recipientGithubLinkId: 'recipientGithubLinkId',
  recipientAddress: 'recipientAddress',
  userId: 'userId',
  echoAppId: 'echoAppId'
};

exports.Prisma.MarkUpScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  description: 'description',
  isArchived: 'isArchived',
  archivedAt: 'archivedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  echoAppId: 'echoAppId'
};

exports.Prisma.GithubLinkScalarFieldEnum = {
  id: 'id',
  githubId: 'githubId',
  githubType: 'githubType',
  githubUrl: 'githubUrl',
  description: 'description',
  isArchived: 'isArchived',
  archivedAt: 'archivedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  echoAppId: 'echoAppId',
  userId: 'userId'
};

exports.Prisma.TransactionScalarFieldEnum = {
  id: 'id',
  transactionMetadataId: 'transactionMetadataId',
  totalCost: 'totalCost',
  appProfit: 'appProfit',
  markUpProfit: 'markUpProfit',
  referralProfit: 'referralProfit',
  rawTransactionCost: 'rawTransactionCost',
  status: 'status',
  isArchived: 'isArchived',
  archivedAt: 'archivedAt',
  createdAt: 'createdAt',
  userId: 'userId',
  echoAppId: 'echoAppId',
  apiKeyId: 'apiKeyId',
  markUpId: 'markUpId',
  spendPoolId: 'spendPoolId',
  userSpendPoolUsageId: 'userSpendPoolUsageId',
  referralCodeId: 'referralCodeId',
  referrerRewardId: 'referrerRewardId'
};

exports.Prisma.SpendPoolScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  totalPaid: 'totalPaid',
  perUserSpendLimit: 'perUserSpendLimit',
  totalSpent: 'totalSpent',
  isArchived: 'isArchived',
  archivedAt: 'archivedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  echoAppId: 'echoAppId'
};

exports.Prisma.UserSpendPoolUsageScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  spendPoolId: 'spendPoolId',
  totalSpent: 'totalSpent',
  isArchived: 'isArchived',
  archivedAt: 'archivedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TransactionMetadataScalarFieldEnum = {
  id: 'id',
  providerId: 'providerId',
  provider: 'provider',
  model: 'model',
  inputTokens: 'inputTokens',
  outputTokens: 'outputTokens',
  totalTokens: 'totalTokens',
  toolCost: 'toolCost',
  prompt: 'prompt',
  isArchived: 'isArchived',
  archivedAt: 'archivedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReferralCodeScalarFieldEnum = {
  id: 'id',
  code: 'code',
  userId: 'userId',
  echoAppId: 'echoAppId',
  grantType: 'grantType',
  grantAmount: 'grantAmount',
  reusable: 'reusable',
  expiresAt: 'expiresAt',
  isUsed: 'isUsed',
  isArchived: 'isArchived',
  archivedAt: 'archivedAt',
  usedAt: 'usedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReferralRewardScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  description: 'description',
  isArchived: 'isArchived',
  archivedAt: 'archivedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  echoAppId: 'echoAppId'
};

exports.Prisma.InFlightRequestScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  echoAppId: 'echoAppId',
  numberInFlight: 'numberInFlight',
  totalEscrowed: 'totalEscrowed',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OutboundEmailSentScalarFieldEnum = {
  id: 'id',
  emailCampaignId: 'emailCampaignId',
  userId: 'userId',
  echoAppId: 'echoAppId',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.GithubType = exports.$Enums.GithubType = {
  user: 'user',
  repo: 'repo'
};

exports.EnumPaymentSource = exports.$Enums.EnumPaymentSource = {
  stripe: 'stripe',
  admin: 'admin',
  signUpGift: 'signUpGift'
};

exports.Prisma.ModelName = {
  User: 'User',
  Account: 'Account',
  Session: 'Session',
  VerificationToken: 'VerificationToken',
  EchoApp: 'EchoApp',
  AppMembership: 'AppMembership',
  ApiKey: 'ApiKey',
  RefreshToken: 'RefreshToken',
  AppSession: 'AppSession',
  Payment: 'Payment',
  Payout: 'Payout',
  MarkUp: 'MarkUp',
  GithubLink: 'GithubLink',
  Transaction: 'Transaction',
  SpendPool: 'SpendPool',
  UserSpendPoolUsage: 'UserSpendPoolUsage',
  TransactionMetadata: 'TransactionMetadata',
  ReferralCode: 'ReferralCode',
  ReferralReward: 'ReferralReward',
  InFlightRequest: 'InFlightRequest',
  OutboundEmailSent: 'OutboundEmailSent'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/jasonhedman/workspace/merit/echo/echo-control/src/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      },
      {
        "fromEnvVar": null,
        "value": "rhel-openssl-3.0.x"
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/jasonhedman/workspace/merit/echo/echo-control/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.0",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider      = \"prisma-client-js\"\n  output        = \"../src/generated/prisma\"\n  binaryTargets = [\"native\", \"rhel-openssl-3.0.x\"]\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id                       String               @id @default(uuid()) @db.Uuid\n  email                    String               @unique\n  name                     String?\n  emailVerified            DateTime?\n  image                    String?\n  isArchived               Boolean              @default(false)\n  archivedAt               DateTime?            @db.Timestamptz(6)\n  createdAt                DateTime             @default(now()) @db.Timestamptz(6)\n  updatedAt                DateTime             @updatedAt @db.Timestamptz(6)\n  totalPaid                Decimal              @default(0) @db.Decimal(65, 14)\n  totalSpent               Decimal              @default(0) @db.Decimal(65, 14)\n  admin                    Boolean              @default(false)\n  referralGithubUserId     String?              @db.Uuid\n  accounts                 Account[]\n  sessions                 Session[]\n  apiKeys                  ApiKey[]\n  appMemberships           AppMembership[]\n  payments                 Payment[]\n  refreshTokens            RefreshToken[]\n  transactions             Transaction[]\n  spendPoolUsage           UserSpendPoolUsage[]\n  ReferralCode             ReferralCode[]\n  appSessions              AppSession[]\n  Payout                   Payout[]\n  githubLink               GithubLink?\n  latestTosVersion         Decimal?\n  latestPrivacyVersion     Decimal?\n  latestFreeCreditsVersion Decimal?\n  OutboundEmailSent        OutboundEmailSent[]\n\n  @@map(\"users\")\n}\n\nmodel Account {\n  userId            String   @db.Uuid\n  type              String\n  provider          String\n  providerAccountId String\n  refresh_token     String?\n  access_token      String?\n  expires_at        Int?\n  token_type        String?\n  scope             String?\n  id_token          String?\n  session_state     String?\n  createdAt         DateTime @default(now())\n  updatedAt         DateTime @updatedAt\n  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@id([provider, providerAccountId])\n}\n\nmodel Session {\n  sessionToken String   @unique\n  userId       String   @db.Uuid\n  expires      DateTime\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n\nmodel VerificationToken {\n  identifier String\n  token      String\n  expires    DateTime\n\n  @@id([identifier, token])\n}\n\nmodel EchoApp {\n  id                     String    @id @default(uuid()) @db.Uuid\n  name                   String\n  description            String?\n  profilePictureUrl      String?\n  bannerImageUrl         String?\n  homepageUrl            String?\n  isPublic               Boolean   @default(false)\n  isArchived             Boolean   @default(false)\n  archivedAt             DateTime? @db.Timestamptz\n  createdAt              DateTime  @default(now()) @db.Timestamptz\n  updatedAt              DateTime  @updatedAt @db.Timestamptz\n  authorizedCallbackUrls String[]  @default([]) // Array of allowed redirect URIs\n\n  apiKeys                 ApiKey[] // API keys for the app \n  Transactions            Transaction[] // LLM transactions for that App\n  refreshTokens           RefreshToken[] // Refresh tokens\n  appMemberships          AppMembership[] // Customers of app and owners\n  markUp                  MarkUp? // The markup rate for this app (one-to-one)\n  githubLink              GithubLink? // The GitHub link for this app (one-to-one)\n  spendPools              SpendPool[] // Spend pools associated with this app\n  ReferralCode            ReferralCode[]\n  currentReferralRewardId String?             @db.Uuid // Reference to current active referral reward\n  currentReferralReward   ReferralReward?     @relation(\"CurrentReferralReward\", fields: [currentReferralRewardId], references: [id])\n  ReferralRewards         ReferralReward[]    @relation(\"AppReferralRewards\") // All referral rewards for this app\n  appSessions             AppSession[]\n  payouts                 Payout[]\n  OutboundEmailSent       OutboundEmailSent[]\n\n  @@map(\"echo_apps\")\n}\n\nmodel AppMembership {\n  id          String    @id @default(uuid()) @db.Uuid\n  userId      String    @db.Uuid\n  echoAppId   String    @db.Uuid\n  role        String\n  status      String    @default(\"active\")\n  isArchived  Boolean   @default(false)\n  archivedAt  DateTime? @db.Timestamptz(6)\n  createdAt   DateTime  @default(now()) @db.Timestamptz(6)\n  updatedAt   DateTime  @updatedAt @db.Timestamptz(6)\n  totalSpent  Decimal   @db.Decimal(65, 14)\n  amountSpent Decimal   @default(0.0) @db.Decimal(65, 14)\n  referrerId  String?   @db.Uuid\n\n  referrer ReferralCode? @relation(fields: [referrerId], references: [id], onDelete: Cascade)\n  echoApp  EchoApp       @relation(fields: [echoAppId], references: [id], onDelete: Cascade)\n  user     User          @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, echoAppId])\n  @@map(\"app_memberships\")\n}\n\nmodel ApiKey {\n  id           String        @id @default(uuid()) @db.Uuid\n  /// Deterministic HMAC-SHA256 hash of the API key for secure storage and O(1) lookup\n  keyHash      String        @unique\n  name         String?\n  isArchived   Boolean       @default(false)\n  archivedAt   DateTime?     @db.Timestamptz(6)\n  lastUsed     DateTime?     @db.Timestamptz(6)\n  metadata     Json?\n  createdAt    DateTime      @default(now()) @db.Timestamptz(6)\n  updatedAt    DateTime      @updatedAt @db.Timestamptz(6)\n  userId       String        @db.Uuid\n  echoAppId    String        @db.Uuid\n  scope        String        @default(\"owner\")\n  echoApp      EchoApp       @relation(fields: [echoAppId], references: [id], onDelete: Cascade)\n  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)\n  Transactions Transaction[]\n\n  @@map(\"api_keys\")\n}\n\nmodel RefreshToken {\n  id         String    @id @default(uuid()) @db.Uuid\n  token      String    @unique\n  isArchived Boolean   @default(false)\n  archivedAt DateTime? @db.Timestamptz(6)\n  expiresAt  DateTime  @db.Timestamptz(6)\n  createdAt  DateTime  @default(now()) @db.Timestamptz(6)\n  updatedAt  DateTime  @updatedAt @db.Timestamptz(6)\n  userId     String    @db.Uuid\n  echoAppId  String    @db.Uuid\n  scope      String    @default(\"llm:invoke offline_access\")\n  echoApp    EchoApp   @relation(fields: [echoAppId], references: [id], onDelete: Cascade)\n  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  sessionId String?     @db.Uuid\n  session   AppSession? @relation(fields: [sessionId], references: [id], onDelete: Cascade)\n\n  @@index([userId, echoAppId, isArchived])\n  @@index([sessionId, isArchived])\n  @@index([expiresAt])\n  @@map(\"refresh_tokens\")\n}\n\nmodel AppSession {\n  id         String    @id @default(uuid()) @db.Uuid\n  userId     String    @db.Uuid\n  echoAppId  String    @db.Uuid\n  deviceName String?\n  userAgent  String?\n  ipAddress  String?\n  createdAt  DateTime  @default(now()) @db.Timestamptz(6)\n  updatedAt  DateTime  @updatedAt @db.Timestamptz(6)\n  lastSeenAt DateTime? @db.Timestamptz(6)\n  revokedAt  DateTime? @db.Timestamptz(6)\n  isArchived Boolean   @default(false)\n\n  user          User           @relation(fields: [userId], references: [id], onDelete: Cascade)\n  echoApp       EchoApp        @relation(fields: [echoAppId], references: [id], onDelete: Cascade)\n  refreshTokens RefreshToken[]\n\n  @@index([userId, echoAppId])\n  @@index([echoAppId, isArchived])\n  @@map(\"app_sessions\")\n}\n\nmodel Payment {\n  id          String            @id @default(uuid()) @db.Uuid\n  paymentId   String            @unique\n  amount      Decimal           @db.Decimal(65, 14)\n  currency    String            @default(\"usd\")\n  status      String\n  source      EnumPaymentSource @default(stripe)\n  description String?\n  isArchived  Boolean           @default(false)\n  archivedAt  DateTime?         @db.Timestamptz(6)\n  createdAt   DateTime          @default(now()) @db.Timestamptz(6)\n  updatedAt   DateTime          @updatedAt @db.Timestamptz(6)\n  userId      String            @db.Uuid\n  spendPoolId String?           @db.Uuid\n  spendPool   SpendPool?        @relation(fields: [spendPoolId], references: [id])\n  user        User              @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"payments\")\n}\n\nmodel Payout {\n  id                    String      @id @default(uuid()) @db.Uuid\n  amount                Decimal     @db.Decimal(65, 14)\n  status                String\n  type                  String // \"markup\" or \"referral\"\n  createdAt             DateTime    @default(now()) @db.Timestamptz(6)\n  updatedAt             DateTime    @updatedAt @db.Timestamptz(6)\n  description           String?\n  transactionId         String?\n  senderAddress         String?\n  recipientGithubLinkId String?     @db.Uuid\n  recipientAddress      String?\n  userId                String?     @db.Uuid // User ID if type is \"referral\"\n  echoAppId             String?     @db.Uuid // App ID if type is \"markup\"\n  recipientGithubLink   GithubLink? @relation(fields: [recipientGithubLinkId], references: [id])\n  user                  User?       @relation(fields: [userId], references: [id], onDelete: Cascade)\n  echoApp               EchoApp?    @relation(fields: [echoAppId], references: [id], onDelete: Cascade)\n\n  @@map(\"payouts\")\n}\n\nmodel MarkUp {\n  id           String        @id @default(uuid()) @db.Uuid\n  amount       Decimal       @default(1.0) @db.Decimal(65, 14)\n  description  String?\n  isArchived   Boolean       @default(false)\n  archivedAt   DateTime?     @db.Timestamptz(6)\n  createdAt    DateTime      @default(now()) @db.Timestamptz(6)\n  updatedAt    DateTime      @updatedAt @db.Timestamptz(6)\n  echoAppId    String        @unique @db.Uuid\n  echoApp      EchoApp       @relation(fields: [echoAppId], references: [id], onDelete: Cascade)\n  Transactions Transaction[]\n\n  @@map(\"markups\")\n}\n\nmodel GithubLink {\n  id          String     @id @default(uuid()) @db.Uuid\n  githubId    Int\n  githubType  GithubType\n  githubUrl   String\n  description String?\n  isArchived  Boolean    @default(false)\n  archivedAt  DateTime?  @db.Timestamptz(6)\n  createdAt   DateTime   @default(now()) @db.Timestamptz(6)\n  updatedAt   DateTime   @updatedAt @db.Timestamptz(6)\n  echoAppId   String?    @unique @db.Uuid\n  userId      String?    @unique @db.Uuid\n  echoApp     EchoApp?   @relation(fields: [echoAppId], references: [id], onDelete: Cascade)\n  user        User?      @relation(fields: [userId], references: [id], onDelete: Cascade)\n  Payout      Payout[]\n\n  @@map(\"github_links\")\n}\n\nenum GithubType {\n  user\n  repo\n}\n\nenum EnumPaymentSource {\n  stripe\n  admin\n  signUpGift\n}\n\nmodel Transaction {\n  id                    String               @id @default(uuid()) @db.Uuid\n  transactionMetadataId String?              @db.Uuid\n  totalCost             Decimal              @default(0.0) @db.Decimal(65, 14)\n  appProfit             Decimal              @default(0.0) @db.Decimal(65, 14)\n  markUpProfit          Decimal              @default(0.0) @db.Decimal(65, 14)\n  referralProfit        Decimal              @default(0.0) @db.Decimal(65, 14)\n  rawTransactionCost    Decimal              @default(0.0) @db.Decimal(65, 14)\n  status                String?\n  isArchived            Boolean              @default(false)\n  archivedAt            DateTime?            @db.Timestamptz(6)\n  createdAt             DateTime             @default(now()) @db.Timestamptz(6)\n  userId                String               @db.Uuid\n  echoAppId             String               @db.Uuid\n  apiKeyId              String?              @db.Uuid\n  markUpId              String?              @db.Uuid\n  spendPoolId           String?              @db.Uuid\n  userSpendPoolUsageId  String?              @db.Uuid\n  referralCodeId        String?              @db.Uuid\n  referrerRewardId      String?              @db.Uuid\n  apiKey                ApiKey?              @relation(fields: [apiKeyId], references: [id], onDelete: Cascade)\n  echoApp               EchoApp              @relation(fields: [echoAppId], references: [id])\n  markUp                MarkUp?              @relation(fields: [markUpId], references: [id])\n  spendPool             SpendPool?           @relation(fields: [spendPoolId], references: [id])\n  transactionMetadata   TransactionMetadata? @relation(fields: [transactionMetadataId], references: [id])\n  user                  User                 @relation(fields: [userId], references: [id], onDelete: Cascade)\n  userSpendPoolUsage    UserSpendPoolUsage?  @relation(fields: [userSpendPoolUsageId], references: [id])\n  referralCode          ReferralCode?        @relation(fields: [referralCodeId], references: [id])\n  referrerReward        ReferralReward?      @relation(fields: [referrerRewardId], references: [id])\n\n  @@map(\"transactions\")\n}\n\nmodel SpendPool {\n  id                String               @id @default(uuid()) @db.Uuid\n  name              String\n  description       String?\n  totalPaid         Decimal              @default(0.0) @db.Decimal(65, 14)\n  perUserSpendLimit Decimal?             @db.Decimal(65, 14)\n  totalSpent        Decimal              @default(0.0) @db.Decimal(65, 14)\n  isArchived        Boolean              @default(false)\n  archivedAt        DateTime?            @db.Timestamptz(6)\n  createdAt         DateTime             @default(now()) @db.Timestamptz(6)\n  updatedAt         DateTime             @updatedAt @db.Timestamptz(6)\n  echoAppId         String               @db.Uuid\n  payments          Payment[]\n  echoApp           EchoApp              @relation(fields: [echoAppId], references: [id], onDelete: Cascade)\n  Transactions      Transaction[]\n  userUsage         UserSpendPoolUsage[]\n\n  @@map(\"spend_pools\")\n}\n\nmodel UserSpendPoolUsage {\n  id           String        @id @default(uuid()) @db.Uuid\n  userId       String        @db.Uuid\n  spendPoolId  String        @db.Uuid\n  totalSpent   Decimal       @default(0.0) @db.Decimal(65, 14)\n  isArchived   Boolean       @default(false)\n  archivedAt   DateTime?     @db.Timestamptz(6)\n  createdAt    DateTime      @default(now()) @db.Timestamptz(6)\n  updatedAt    DateTime      @updatedAt @db.Timestamptz(6)\n  Transactions Transaction[]\n  spendPool    SpendPool     @relation(fields: [spendPoolId], references: [id], onDelete: Cascade)\n  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, spendPoolId])\n  @@map(\"user_spend_pool_usage\")\n}\n\nmodel TransactionMetadata {\n  id           String        @id @default(uuid()) @db.Uuid\n  providerId   String\n  provider     String\n  model        String\n  inputTokens  Int\n  outputTokens Int\n  totalTokens  Int\n  toolCost     Decimal       @default(0.0) @db.Decimal(65, 14)\n  prompt       String?\n  isArchived   Boolean       @default(false)\n  archivedAt   DateTime?     @db.Timestamptz(6)\n  createdAt    DateTime      @default(now()) @db.Timestamptz(6)\n  updatedAt    DateTime      @updatedAt @db.Timestamptz(6)\n  transactions Transaction[]\n\n  @@map(\"transaction_metadata\")\n}\n\nmodel ReferralCode {\n  id          String    @id @default(uuid()) @db.Uuid\n  code        String    @unique\n  userId      String?   @db.Uuid\n  echoAppId   String?   @db.Uuid\n  grantType   String // 'credits' or 'referral'\n  grantAmount Decimal?  @default(0.0) @db.Decimal(65, 14) // Amount of credits to grant if grantType is 'credits'\n  reusable    Boolean   @default(false)\n  expiresAt   DateTime  @db.Timestamptz\n  isUsed      Boolean   @default(false)\n  isArchived  Boolean   @default(false)\n  archivedAt  DateTime? @db.Timestamptz\n  usedAt      DateTime? @db.Timestamptz\n  createdAt   DateTime  @default(now()) @db.Timestamptz\n  updatedAt   DateTime  @updatedAt @db.Timestamptz\n\n  appMemberships AppMembership[]\n\n  user        User?         @relation(fields: [userId], references: [id], onDelete: Cascade)\n  echoApp     EchoApp?      @relation(fields: [echoAppId], references: [id], onDelete: Cascade)\n  Transaction Transaction[]\n\n  @@map(\"referral_codes\")\n}\n\nmodel ReferralReward {\n  id          String    @id @default(uuid()) @db.Uuid\n  amount      Decimal   @default(1.0) @db.Decimal(65, 14) // Mark-up multiplier for per-token charging - supports unlimited precision\n  description String? // Optional description for the markup rate\n  isArchived  Boolean   @default(false)\n  archivedAt  DateTime? @db.Timestamptz\n  createdAt   DateTime  @default(now()) @db.Timestamptz\n  updatedAt   DateTime  @updatedAt @db.Timestamptz\n  echoAppId   String    @db.Uuid // Reference to the app this reward belongs to (many-to-one)\n\n  echoApp        EchoApp       @relation(\"AppReferralRewards\", fields: [echoAppId], references: [id], onDelete: Cascade) // App this reward belongs to\n  currentForApps EchoApp[]     @relation(\"CurrentReferralReward\") // Apps that have this as current reward\n  Transaction    Transaction[]\n\n  @@map(\"referral_rewards\")\n}\n\nmodel InFlightRequest {\n  id             String   @id @default(uuid()) @db.Uuid\n  userId         String   @db.Uuid\n  echoAppId      String   @db.Uuid\n  numberInFlight Int      @default(0)\n  totalEscrowed  Decimal  @default(0.0) @db.Decimal(65, 14)\n  createdAt      DateTime @default(now()) @db.Timestamptz(6)\n  updatedAt      DateTime @updatedAt @db.Timestamptz(6)\n\n  @@unique([userId, echoAppId])\n  @@map(\"in_flight_requests\")\n}\n\nmodel OutboundEmailSent {\n  id              String   @id @default(uuid()) @db.Uuid\n  emailCampaignId String\n  userId          String   @db.Uuid\n  echoAppId       String?  @db.Uuid\n  createdAt       DateTime @default(now()) @db.Timestamptz(6)\n\n  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  echoApp EchoApp? @relation(fields: [echoAppId], references: [id], onDelete: Cascade)\n\n  @@index([emailCampaignId])\n  @@map(\"outbound_emails_sent\")\n}\n",
  "inlineSchemaHash": "9ab13116f5d457eb51bab9d733523429d43c2b130592a04983b04f75df47104d",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isArchived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"archivedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"totalPaid\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"totalSpent\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"admin\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"referralGithubUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"apiKeys\",\"kind\":\"object\",\"type\":\"ApiKey\",\"relationName\":\"ApiKeyToUser\"},{\"name\":\"appMemberships\",\"kind\":\"object\",\"type\":\"AppMembership\",\"relationName\":\"AppMembershipToUser\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentToUser\"},{\"name\":\"refreshTokens\",\"kind\":\"object\",\"type\":\"RefreshToken\",\"relationName\":\"RefreshTokenToUser\"},{\"name\":\"transactions\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"TransactionToUser\"},{\"name\":\"spendPoolUsage\",\"kind\":\"object\",\"type\":\"UserSpendPoolUsage\",\"relationName\":\"UserToUserSpendPoolUsage\"},{\"name\":\"ReferralCode\",\"kind\":\"object\",\"type\":\"ReferralCode\",\"relationName\":\"ReferralCodeToUser\"},{\"name\":\"appSessions\",\"kind\":\"object\",\"type\":\"AppSession\",\"relationName\":\"AppSessionToUser\"},{\"name\":\"Payout\",\"kind\":\"object\",\"type\":\"Payout\",\"relationName\":\"PayoutToUser\"},{\"name\":\"githubLink\",\"kind\":\"object\",\"type\":\"GithubLink\",\"relationName\":\"GithubLinkToUser\"},{\"name\":\"latestTosVersion\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"latestPrivacyVersion\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"latestFreeCreditsVersion\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"OutboundEmailSent\",\"kind\":\"object\",\"type\":\"OutboundEmailSent\",\"relationName\":\"OutboundEmailSentToUser\"}],\"dbName\":\"users\"},\"Account\":{\"fields\":[{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refresh_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"access_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"token_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"id_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"session_state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"}],\"dbName\":null},\"Session\":{\"fields\":[{\"name\":\"sessionToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"}],\"dbName\":null},\"VerificationToken\":{\"fields\":[{\"name\":\"identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"EchoApp\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profilePictureUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bannerImageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"homepageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPublic\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isArchived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"archivedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"authorizedCallbackUrls\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"apiKeys\",\"kind\":\"object\",\"type\":\"ApiKey\",\"relationName\":\"ApiKeyToEchoApp\"},{\"name\":\"Transactions\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"EchoAppToTransaction\"},{\"name\":\"refreshTokens\",\"kind\":\"object\",\"type\":\"RefreshToken\",\"relationName\":\"EchoAppToRefreshToken\"},{\"name\":\"appMemberships\",\"kind\":\"object\",\"type\":\"AppMembership\",\"relationName\":\"AppMembershipToEchoApp\"},{\"name\":\"markUp\",\"kind\":\"object\",\"type\":\"MarkUp\",\"relationName\":\"EchoAppToMarkUp\"},{\"name\":\"githubLink\",\"kind\":\"object\",\"type\":\"GithubLink\",\"relationName\":\"EchoAppToGithubLink\"},{\"name\":\"spendPools\",\"kind\":\"object\",\"type\":\"SpendPool\",\"relationName\":\"EchoAppToSpendPool\"},{\"name\":\"ReferralCode\",\"kind\":\"object\",\"type\":\"ReferralCode\",\"relationName\":\"EchoAppToReferralCode\"},{\"name\":\"currentReferralRewardId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currentReferralReward\",\"kind\":\"object\",\"type\":\"ReferralReward\",\"relationName\":\"CurrentReferralReward\"},{\"name\":\"ReferralRewards\",\"kind\":\"object\",\"type\":\"ReferralReward\",\"relationName\":\"AppReferralRewards\"},{\"name\":\"appSessions\",\"kind\":\"object\",\"type\":\"AppSession\",\"relationName\":\"AppSessionToEchoApp\"},{\"name\":\"payouts\",\"kind\":\"object\",\"type\":\"Payout\",\"relationName\":\"EchoAppToPayout\"},{\"name\":\"OutboundEmailSent\",\"kind\":\"object\",\"type\":\"OutboundEmailSent\",\"relationName\":\"EchoAppToOutboundEmailSent\"}],\"dbName\":\"echo_apps\"},\"AppMembership\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"echoAppId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isArchived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"archivedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"totalSpent\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"amountSpent\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"referrerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"referrer\",\"kind\":\"object\",\"type\":\"ReferralCode\",\"relationName\":\"AppMembershipToReferralCode\"},{\"name\":\"echoApp\",\"kind\":\"object\",\"type\":\"EchoApp\",\"relationName\":\"AppMembershipToEchoApp\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AppMembershipToUser\"}],\"dbName\":\"app_memberships\"},\"ApiKey\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"keyHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isArchived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"archivedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastUsed\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"echoAppId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"echoApp\",\"kind\":\"object\",\"type\":\"EchoApp\",\"relationName\":\"ApiKeyToEchoApp\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ApiKeyToUser\"},{\"name\":\"Transactions\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"ApiKeyToTransaction\"}],\"dbName\":\"api_keys\"},\"RefreshToken\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isArchived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"archivedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"echoAppId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"echoApp\",\"kind\":\"object\",\"type\":\"EchoApp\",\"relationName\":\"EchoAppToRefreshToken\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RefreshTokenToUser\"},{\"name\":\"sessionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"session\",\"kind\":\"object\",\"type\":\"AppSession\",\"relationName\":\"AppSessionToRefreshToken\"}],\"dbName\":\"refresh_tokens\"},\"AppSession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"echoAppId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deviceName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastSeenAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"revokedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isArchived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AppSessionToUser\"},{\"name\":\"echoApp\",\"kind\":\"object\",\"type\":\"EchoApp\",\"relationName\":\"AppSessionToEchoApp\"},{\"name\":\"refreshTokens\",\"kind\":\"object\",\"type\":\"RefreshToken\",\"relationName\":\"AppSessionToRefreshToken\"}],\"dbName\":\"app_sessions\"},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"source\",\"kind\":\"enum\",\"type\":\"EnumPaymentSource\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isArchived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"archivedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"spendPoolId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"spendPool\",\"kind\":\"object\",\"type\":\"SpendPool\",\"relationName\":\"PaymentToSpendPool\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PaymentToUser\"}],\"dbName\":\"payments\"},\"Payout\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transactionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"senderAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recipientGithubLinkId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recipientAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"echoAppId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recipientGithubLink\",\"kind\":\"object\",\"type\":\"GithubLink\",\"relationName\":\"GithubLinkToPayout\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PayoutToUser\"},{\"name\":\"echoApp\",\"kind\":\"object\",\"type\":\"EchoApp\",\"relationName\":\"EchoAppToPayout\"}],\"dbName\":\"payouts\"},\"MarkUp\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isArchived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"archivedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"echoAppId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"echoApp\",\"kind\":\"object\",\"type\":\"EchoApp\",\"relationName\":\"EchoAppToMarkUp\"},{\"name\":\"Transactions\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"MarkUpToTransaction\"}],\"dbName\":\"markups\"},\"GithubLink\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"githubId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"githubType\",\"kind\":\"enum\",\"type\":\"GithubType\"},{\"name\":\"githubUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isArchived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"archivedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"echoAppId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"echoApp\",\"kind\":\"object\",\"type\":\"EchoApp\",\"relationName\":\"EchoAppToGithubLink\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"GithubLinkToUser\"},{\"name\":\"Payout\",\"kind\":\"object\",\"type\":\"Payout\",\"relationName\":\"GithubLinkToPayout\"}],\"dbName\":\"github_links\"},\"Transaction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transactionMetadataId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"totalCost\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"appProfit\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"markUpProfit\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"referralProfit\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"rawTransactionCost\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isArchived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"archivedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"echoAppId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"apiKeyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"markUpId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"spendPoolId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userSpendPoolUsageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"referralCodeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"referrerRewardId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"apiKey\",\"kind\":\"object\",\"type\":\"ApiKey\",\"relationName\":\"ApiKeyToTransaction\"},{\"name\":\"echoApp\",\"kind\":\"object\",\"type\":\"EchoApp\",\"relationName\":\"EchoAppToTransaction\"},{\"name\":\"markUp\",\"kind\":\"object\",\"type\":\"MarkUp\",\"relationName\":\"MarkUpToTransaction\"},{\"name\":\"spendPool\",\"kind\":\"object\",\"type\":\"SpendPool\",\"relationName\":\"SpendPoolToTransaction\"},{\"name\":\"transactionMetadata\",\"kind\":\"object\",\"type\":\"TransactionMetadata\",\"relationName\":\"TransactionToTransactionMetadata\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TransactionToUser\"},{\"name\":\"userSpendPoolUsage\",\"kind\":\"object\",\"type\":\"UserSpendPoolUsage\",\"relationName\":\"TransactionToUserSpendPoolUsage\"},{\"name\":\"referralCode\",\"kind\":\"object\",\"type\":\"ReferralCode\",\"relationName\":\"ReferralCodeToTransaction\"},{\"name\":\"referrerReward\",\"kind\":\"object\",\"type\":\"ReferralReward\",\"relationName\":\"ReferralRewardToTransaction\"}],\"dbName\":\"transactions\"},\"SpendPool\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"totalPaid\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"perUserSpendLimit\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"totalSpent\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"isArchived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"archivedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"echoAppId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentToSpendPool\"},{\"name\":\"echoApp\",\"kind\":\"object\",\"type\":\"EchoApp\",\"relationName\":\"EchoAppToSpendPool\"},{\"name\":\"Transactions\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"SpendPoolToTransaction\"},{\"name\":\"userUsage\",\"kind\":\"object\",\"type\":\"UserSpendPoolUsage\",\"relationName\":\"SpendPoolToUserSpendPoolUsage\"}],\"dbName\":\"spend_pools\"},\"UserSpendPoolUsage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"spendPoolId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"totalSpent\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"isArchived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"archivedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Transactions\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"TransactionToUserSpendPoolUsage\"},{\"name\":\"spendPool\",\"kind\":\"object\",\"type\":\"SpendPool\",\"relationName\":\"SpendPoolToUserSpendPoolUsage\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserSpendPoolUsage\"}],\"dbName\":\"user_spend_pool_usage\"},\"TransactionMetadata\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"model\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"inputTokens\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"outputTokens\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalTokens\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"toolCost\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"prompt\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isArchived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"archivedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"transactions\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"TransactionToTransactionMetadata\"}],\"dbName\":\"transaction_metadata\"},\"ReferralCode\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"echoAppId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"grantType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"grantAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"reusable\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isUsed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isArchived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"archivedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"usedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"appMemberships\",\"kind\":\"object\",\"type\":\"AppMembership\",\"relationName\":\"AppMembershipToReferralCode\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReferralCodeToUser\"},{\"name\":\"echoApp\",\"kind\":\"object\",\"type\":\"EchoApp\",\"relationName\":\"EchoAppToReferralCode\"},{\"name\":\"Transaction\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"ReferralCodeToTransaction\"}],\"dbName\":\"referral_codes\"},\"ReferralReward\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isArchived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"archivedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"echoAppId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"echoApp\",\"kind\":\"object\",\"type\":\"EchoApp\",\"relationName\":\"AppReferralRewards\"},{\"name\":\"currentForApps\",\"kind\":\"object\",\"type\":\"EchoApp\",\"relationName\":\"CurrentReferralReward\"},{\"name\":\"Transaction\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"ReferralRewardToTransaction\"}],\"dbName\":\"referral_rewards\"},\"InFlightRequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"echoAppId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"numberInFlight\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalEscrowed\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"in_flight_requests\"},\"OutboundEmailSent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailCampaignId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"echoAppId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OutboundEmailSentToUser\"},{\"name\":\"echoApp\",\"kind\":\"object\",\"type\":\"EchoApp\",\"relationName\":\"EchoAppToOutboundEmailSent\"}],\"dbName\":\"outbound_emails_sent\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

