services:
  postgres-test:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: echo_integration_test
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
      - ./init-test-db.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test -d echo_integration_test"]
      interval: 5s
      timeout: 5s
      retries: 5

  echo-control-test:
    build: 
      context: ../../
      dockerfile: echo-control/Dockerfile.test
    env_file:
      - ../.env.integration.local
    ports:
      - "3001:3000"
    depends_on:
      postgres-test:
        condition: service_healthy
    command: |
      sh -c "
        echo 'Waiting for database to be ready...' &&
        sleep 5 &&
        echo 'Running Prisma migrations...' &&
        pnpm prisma:push &&
        echo 'Starting echo-control in test mode...' &&
        pnpm start
      "
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  playwright:
    image: mcr.microsoft.com/playwright:v1.40.0-focal
    environment:
      - ECHO_CONTROL_URL=http://echo-control-test:3000
      - HEADLESS=true
      - BROWSER_TIMEOUT=30000
    volumes:
      - ../integration-tests:/workspace
    working_dir: /workspace
    depends_on:
      echo-control-test:
        condition: service_healthy
    command: npx playwright test
    profiles:
      - e2e

volumes:
  postgres_test_data: