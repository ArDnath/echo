import { openai, google } from '@/echo';
import { experimental_generateImage as generateImage, generateText } from 'ai';

export async function POST(req: Request) {
  const { prompt, model = 'openai' } = await req.json();

  try {
    if (model === 'gemini') {
      const result = await generateText({
        model: google('gemini-2.5-flash-image-preview'),
        prompt,
      });

      // Find the first image file in the result
      const imageFile = result.files?.find(file => 
        file.mediaType?.startsWith('image/')
      );

      if (!imageFile) {
        throw new Error('No image generated by Gemini model');
      }

      return Response.json({ 
        imageUrl: {
          base64Data: imageFile.base64,
          mediaType: imageFile.mediaType
        } 
      });
    } else {
      // Default to OpenAI
      const result = await generateImage({
        model: openai.image('gpt-image-1'),
        prompt,
      });

      return Response.json({ imageUrl: result.image });
    }
  } catch (error) {
    console.error('Image generation error:', error);
    return Response.json(
      { error: 'Failed to generate image' },
      { status: 500 }
    );
  }
}
