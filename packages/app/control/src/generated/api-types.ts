import { OriginalRouteHandler } from '../app/api/_utils/types';
import { z } from 'zod';

// Auto-generated API response types
// This file is generated by running: npm run generate-api-types
// Do not edit this file manually - it will be overwritten

// Utility type to extract types from route handlers
type ExtractRouteHandlerTypes<T> = T extends OriginalRouteHandler<infer TParams, infer TQuery, infer TBody, infer TResponse> 
  ? { 
      params: TParams extends z.Schema ? z.infer<TParams> : TParams; 
      query: TQuery extends z.Schema ? z.infer<TQuery> : TQuery; 
      body: TBody extends z.Schema ? z.infer<TBody> : TBody; 
      response: TResponse 
    }
  : never;

import { GET as GETappsid } from '../app/api/v1/apps/[id]/route';
import { GET as GETapps } from '../app/api/v1/apps/route';
import { GET as GETbalanceidfree } from '../app/api/v1/balance/[id]/free/route';
import { GET as GETbalance } from '../app/api/v1/balance/route';
import { GET as GETbasepaymentlink } from '../app/api/v1/base/payment-link/route';
import { POST as POSTstripepaymentlink } from '../app/api/v1/stripe/payment-link/route';
import { POST as POSTuserreferral } from '../app/api/v1/user/referral/route';
import { GET as GETuser } from '../app/api/v1/user/route';

// Route: /apps/{id}
export type GetAppsByIdResponse = ExtractRouteHandlerTypes<typeof GETappsid>['response'];
export type GetAppsByIdParams = ExtractRouteHandlerTypes<typeof GETappsid>['params'];
export type GetAppsByIdQuery = ExtractRouteHandlerTypes<typeof GETappsid>['query'];

// Route: /apps
export type GetAppsResponse = ExtractRouteHandlerTypes<typeof GETapps>['response'];
export type GetAppsParams = ExtractRouteHandlerTypes<typeof GETapps>['params'];
export type GetAppsQuery = ExtractRouteHandlerTypes<typeof GETapps>['query'];

// Route: /balance/{id}/free
export type GetBalanceByIdFreeResponse = ExtractRouteHandlerTypes<typeof GETbalanceidfree>['response'];
export type GetBalanceByIdFreeParams = ExtractRouteHandlerTypes<typeof GETbalanceidfree>['params'];
export type GetBalanceByIdFreeQuery = ExtractRouteHandlerTypes<typeof GETbalanceidfree>['query'];

// Route: /balance
export type GetBalanceResponse = ExtractRouteHandlerTypes<typeof GETbalance>['response'];
export type GetBalanceParams = ExtractRouteHandlerTypes<typeof GETbalance>['params'];
export type GetBalanceQuery = ExtractRouteHandlerTypes<typeof GETbalance>['query'];

// Route: /base/payment-link
export type GetBasePaymentLinkResponse = ExtractRouteHandlerTypes<typeof GETbasepaymentlink>['response'];
export type GetBasePaymentLinkParams = ExtractRouteHandlerTypes<typeof GETbasepaymentlink>['params'];
export type GetBasePaymentLinkQuery = ExtractRouteHandlerTypes<typeof GETbasepaymentlink>['query'];

// Route: /stripe/payment-link
export type CreateStripePaymentLinkResponse = ExtractRouteHandlerTypes<typeof POSTstripepaymentlink>['response'];
export type CreateStripePaymentLinkParams = ExtractRouteHandlerTypes<typeof POSTstripepaymentlink>['params'];
export type CreateStripePaymentLinkQuery = ExtractRouteHandlerTypes<typeof POSTstripepaymentlink>['query'];
export type CreateStripePaymentLinkBody = ExtractRouteHandlerTypes<typeof POSTstripepaymentlink>['body'];

// Route: /user/referral
export type CreateUserReferralResponse = ExtractRouteHandlerTypes<typeof POSTuserreferral>['response'];
export type CreateUserReferralParams = ExtractRouteHandlerTypes<typeof POSTuserreferral>['params'];
export type CreateUserReferralQuery = ExtractRouteHandlerTypes<typeof POSTuserreferral>['query'];
export type CreateUserReferralBody = ExtractRouteHandlerTypes<typeof POSTuserreferral>['body'];

// Route: /user
export type GetUserResponse = ExtractRouteHandlerTypes<typeof GETuser>['response'];
export type GetUserParams = ExtractRouteHandlerTypes<typeof GETuser>['params'];
export type GetUserQuery = ExtractRouteHandlerTypes<typeof GETuser>['query'];

